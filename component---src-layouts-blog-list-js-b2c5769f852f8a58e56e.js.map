{"version":3,"sources":["webpack:///./src/components/pagination.js","webpack:///./src/components/grid.js","webpack:///./src/components/renderList.js","webpack:///./src/utils/formatDate.js","webpack:///./node_modules/lodash.kebabcase/index.js","webpack:///./src/utils/ConcatWords.js","webpack:///./src/components/featured.js","webpack:///./src/layouts/blog-list.js"],"names":["Pagination","numPages","currentPage","contextPage","Array","from","length","map","item","i","index","baseLink","link","current","key","href","Container","styled","div","renderList","node","imageSource","frontmatter","selectedImage","childImageSharp","fluid","src","xs","fields","slug","to","kebabCase","author","title","formatDate","date","tags","cat","arr","arrCount","alt","now","Date","getFullYear","getMonth","getDate","reAsciiWord","reLatin","rsBreakRange","rsMathOpRange","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsRegional","rsSurrPair","rsUpper","rsLowerMisc","rsUpperMisc","reOptMod","rsModifier","rsSeq","join","rsEmoji","reApos","RegExp","reComboMark","reUnicodeWord","reHasUnicodeWord","freeGlobal","global","Object","freeSelf","self","root","Function","object","deburrLetter","undefined","objectToString","prototype","toString","Symbol","symbolProto","symbolToString","baseToString","value","isObjectLike","call","isSymbol","result","callback","word","toLowerCase","string","array","iteratee","accumulator","initAccum","arrayReduce","pattern","guard","test","hasUnicodeWord","match","unicodeWords","asciiWords","words","replace","deburr","module","exports","children","BlogFeatured","markdownRemark","useStaticQuery","query","md","ConcatWords","BlogPostList","data","pageContext","allMarkdownRemark","edges"],"mappings":"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","file":"component---src-layouts-blog-list-js-b2c5769f852f8a58e56e.js","sourcesContent":["import React from \"react\"\n\nimport * as S from \"../components/styles.css\"\n\nconst Pagination = ({ numPages, currentPage, contextPage }) => {\n  if (numPages <= 1) {\n    return null\n  }\n\n  return (\n    <S.Pagination>\n      {Array.from({ length: numPages }).map((item, i) => {\n        const index = i + 1\n\n        const baseLink = `/blog/${contextPage ? `${contextPage}/` : \"\"}`\n        const link = index === 1 ? baseLink : `${baseLink}page/${index}`\n\n        return (\n          <S.PaginationItem current={currentPage === index} key={link}>\n            {currentPage === index ? (\n              <span>{index}</span>\n            ) : (\n              <a href={link}>{index}</a>\n            )}\n          </S.PaginationItem>\n        )\n      })}\n    </S.Pagination>\n  )\n}\n\nexport default Pagination\n","import styled from \"styled-components\"\n\nexport const Container = styled.div`\n  flex: 1;\n  margin: auto;\n  width: 100%;\n  max-width: 42rem;\n  padding: 0 1rem;\n`\n","import React from \"react\"\nimport kebabCase from \"lodash.kebabcase\"\nimport { Link } from \"gatsby\"\nimport { Row, Cell } from \"griding\"\n\nimport * as S from \"../components/styles.css\"\nimport ConcatWords from \"../utils/ConcatWords\"\nimport formatDate from \"../utils/formatDate\"\n\nconst renderList = ({ node }) => {\n  const imageSource = node.frontmatter.selectedImage ?\n  node.frontmatter.selectedImage.childImageSharp.fluid.src : \"\"\n\n  if (imageSource === \"\") {\n    return (\n      <Cell xs={12} key={node.fields.slug}>\n        <S.Article>\n          <Row>\n            <Cell xs={3}>\n         \n            </Cell>\n  \n            <Cell xs={9}>\n              <S.Author>\n                By{\" \"}\n                <Link to={`/blog/author/${kebabCase(node.frontmatter.author)}`}>\n                  {node.frontmatter.author}\n                </Link>\n              </S.Author>\n  \n              <Link to={node.fields.slug}>\n                <S.Title>{node.frontmatter.title}</S.Title>\n              </Link>\n  \n              <S.DateText>{formatDate(node.frontmatter.date)}</S.DateText>\n  \n              <S.Tags>\n                {node.frontmatter.tags.map((cat, index, arr) => (\n                  <ConcatWords arrCount={arr.length} index={index} key={cat}>\n                    <Link to={`/blog/tags/${kebabCase(cat)}`}>{cat}</Link>\n                  </ConcatWords>\n                ))}\n              </S.Tags>\n            </Cell>\n          </Row>\n        </S.Article>\n      </Cell>\n    )\n   }\n  return (\n    <Cell xs={12} key={node.fields.slug}>\n      <S.Article>\n        <Row>\n          <Cell xs={3}>\n            <S.Image>\n              <Link to={node.fields.slug}>\n                <img src={imageSource} alt={node.frontmatter.title} />\n              </Link>\n            </S.Image>\n          </Cell>\n\n          <Cell xs={9}>\n            <S.Author>\n              By{\" \"}\n              <Link to={`/blog/author/${kebabCase(node.frontmatter.author)}`}>\n                {node.frontmatter.author}\n              </Link>\n            </S.Author>\n\n            <Link to={node.fields.slug}>\n              <S.Title>{node.frontmatter.title}</S.Title>\n            </Link>\n\n            <S.DateText>{formatDate(node.frontmatter.date)}</S.DateText>\n\n            <S.Tags>\n              {node.frontmatter.tags.map((cat, index, arr) => (\n                <ConcatWords arrCount={arr.length} index={index} key={cat}>\n                  <Link to={`/blog/tags/${kebabCase(cat)}`}>{cat}</Link>\n                </ConcatWords>\n              ))}\n            </S.Tags>\n          </Cell>\n        </Row>\n      </S.Article>\n    </Cell>\n  )\n}\n\nexport default renderList\n","export default (date) => {\n  const now = new Date(date)\n\n  return `${now.getFullYear()} / ${now.getMonth() + 1} / ${now.getDate()}`\n}\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsAstralRange = \"\\\\ud800-\\\\udfff\",\n  rsComboMarksRange = \"\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23\",\n  rsComboSymbolsRange = \"\\\\u20d0-\\\\u20f0\",\n  rsDingbatRange = \"\\\\u2700-\\\\u27bf\",\n  rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n  rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n  rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n  rsPunctuationRange = \"\\\\u2000-\\\\u206f\",\n  rsSpaceRange = \" \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\",\n  rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n  rsVarRange = \"\\\\ufe0e\\\\ufe0f\",\n  rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n  rsBreak = '[' + rsBreakRange + ']',\n  rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n  rsDigits = '\\\\d+',\n  rsDingbat = '[' + rsDingbatRange + ']',\n  rsLower = '[' + rsLowerRange + ']',\n  rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n  rsFitz = \"\\\\ud83c[\\\\udffb-\\\\udfff]\",\n  rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n  rsNonAstral = '[^' + rsAstralRange + ']',\n  rsRegional = \"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\",\n  rsSurrPair = \"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\",\n  rsUpper = '[' + rsUpperRange + ']',\n  rsZWJ = \"\\\\u200d\";\n\n/** Used to compose unicode regexes. */\nvar rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n  rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n  rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n  rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n  reOptMod = rsModifier + '?',\n  rsOptVar = '[' + rsVarRange + ']?',\n  rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n  rsSeq = rsOptVar + reOptMod + rsOptJoin,\n  rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')', rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')', rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr, rsUpper + '+' + rsOptUpperContr, rsDigits, rsEmoji].join('|'), 'g');\n\n/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',\n  '\\xc1': 'A',\n  '\\xc2': 'A',\n  '\\xc3': 'A',\n  '\\xc4': 'A',\n  '\\xc5': 'A',\n  '\\xe0': 'a',\n  '\\xe1': 'a',\n  '\\xe2': 'a',\n  '\\xe3': 'a',\n  '\\xe4': 'a',\n  '\\xe5': 'a',\n  '\\xc7': 'C',\n  '\\xe7': 'c',\n  '\\xd0': 'D',\n  '\\xf0': 'd',\n  '\\xc8': 'E',\n  '\\xc9': 'E',\n  '\\xca': 'E',\n  '\\xcb': 'E',\n  '\\xe8': 'e',\n  '\\xe9': 'e',\n  '\\xea': 'e',\n  '\\xeb': 'e',\n  '\\xcc': 'I',\n  '\\xcd': 'I',\n  '\\xce': 'I',\n  '\\xcf': 'I',\n  '\\xec': 'i',\n  '\\xed': 'i',\n  '\\xee': 'i',\n  '\\xef': 'i',\n  '\\xd1': 'N',\n  '\\xf1': 'n',\n  '\\xd2': 'O',\n  '\\xd3': 'O',\n  '\\xd4': 'O',\n  '\\xd5': 'O',\n  '\\xd6': 'O',\n  '\\xd8': 'O',\n  '\\xf2': 'o',\n  '\\xf3': 'o',\n  '\\xf4': 'o',\n  '\\xf5': 'o',\n  '\\xf6': 'o',\n  '\\xf8': 'o',\n  '\\xd9': 'U',\n  '\\xda': 'U',\n  '\\xdb': 'U',\n  '\\xdc': 'U',\n  '\\xf9': 'u',\n  '\\xfa': 'u',\n  '\\xfb': 'u',\n  '\\xfc': 'u',\n  '\\xdd': 'Y',\n  '\\xfd': 'y',\n  '\\xff': 'y',\n  '\\xc6': 'Ae',\n  '\\xe6': 'ae',\n  '\\xde': 'Th',\n  '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  \"\\u0100\": 'A',\n  \"\\u0102\": 'A',\n  \"\\u0104\": 'A',\n  \"\\u0101\": 'a',\n  \"\\u0103\": 'a',\n  \"\\u0105\": 'a',\n  \"\\u0106\": 'C',\n  \"\\u0108\": 'C',\n  \"\\u010A\": 'C',\n  \"\\u010C\": 'C',\n  \"\\u0107\": 'c',\n  \"\\u0109\": 'c',\n  \"\\u010B\": 'c',\n  \"\\u010D\": 'c',\n  \"\\u010E\": 'D',\n  \"\\u0110\": 'D',\n  \"\\u010F\": 'd',\n  \"\\u0111\": 'd',\n  \"\\u0112\": 'E',\n  \"\\u0114\": 'E',\n  \"\\u0116\": 'E',\n  \"\\u0118\": 'E',\n  \"\\u011A\": 'E',\n  \"\\u0113\": 'e',\n  \"\\u0115\": 'e',\n  \"\\u0117\": 'e',\n  \"\\u0119\": 'e',\n  \"\\u011B\": 'e',\n  \"\\u011C\": 'G',\n  \"\\u011E\": 'G',\n  \"\\u0120\": 'G',\n  \"\\u0122\": 'G',\n  \"\\u011D\": 'g',\n  \"\\u011F\": 'g',\n  \"\\u0121\": 'g',\n  \"\\u0123\": 'g',\n  \"\\u0124\": 'H',\n  \"\\u0126\": 'H',\n  \"\\u0125\": 'h',\n  \"\\u0127\": 'h',\n  \"\\u0128\": 'I',\n  \"\\u012A\": 'I',\n  \"\\u012C\": 'I',\n  \"\\u012E\": 'I',\n  \"\\u0130\": 'I',\n  \"\\u0129\": 'i',\n  \"\\u012B\": 'i',\n  \"\\u012D\": 'i',\n  \"\\u012F\": 'i',\n  \"\\u0131\": 'i',\n  \"\\u0134\": 'J',\n  \"\\u0135\": 'j',\n  \"\\u0136\": 'K',\n  \"\\u0137\": 'k',\n  \"\\u0138\": 'k',\n  \"\\u0139\": 'L',\n  \"\\u013B\": 'L',\n  \"\\u013D\": 'L',\n  \"\\u013F\": 'L',\n  \"\\u0141\": 'L',\n  \"\\u013A\": 'l',\n  \"\\u013C\": 'l',\n  \"\\u013E\": 'l',\n  \"\\u0140\": 'l',\n  \"\\u0142\": 'l',\n  \"\\u0143\": 'N',\n  \"\\u0145\": 'N',\n  \"\\u0147\": 'N',\n  \"\\u014A\": 'N',\n  \"\\u0144\": 'n',\n  \"\\u0146\": 'n',\n  \"\\u0148\": 'n',\n  \"\\u014B\": 'n',\n  \"\\u014C\": 'O',\n  \"\\u014E\": 'O',\n  \"\\u0150\": 'O',\n  \"\\u014D\": 'o',\n  \"\\u014F\": 'o',\n  \"\\u0151\": 'o',\n  \"\\u0154\": 'R',\n  \"\\u0156\": 'R',\n  \"\\u0158\": 'R',\n  \"\\u0155\": 'r',\n  \"\\u0157\": 'r',\n  \"\\u0159\": 'r',\n  \"\\u015A\": 'S',\n  \"\\u015C\": 'S',\n  \"\\u015E\": 'S',\n  \"\\u0160\": 'S',\n  \"\\u015B\": 's',\n  \"\\u015D\": 's',\n  \"\\u015F\": 's',\n  \"\\u0161\": 's',\n  \"\\u0162\": 'T',\n  \"\\u0164\": 'T',\n  \"\\u0166\": 'T',\n  \"\\u0163\": 't',\n  \"\\u0165\": 't',\n  \"\\u0167\": 't',\n  \"\\u0168\": 'U',\n  \"\\u016A\": 'U',\n  \"\\u016C\": 'U',\n  \"\\u016E\": 'U',\n  \"\\u0170\": 'U',\n  \"\\u0172\": 'U',\n  \"\\u0169\": 'u',\n  \"\\u016B\": 'u',\n  \"\\u016D\": 'u',\n  \"\\u016F\": 'u',\n  \"\\u0171\": 'u',\n  \"\\u0173\": 'u',\n  \"\\u0174\": 'W',\n  \"\\u0175\": 'w',\n  \"\\u0176\": 'Y',\n  \"\\u0177\": 'y',\n  \"\\u0178\": 'Y',\n  \"\\u0179\": 'Z',\n  \"\\u017B\": 'Z',\n  \"\\u017D\": 'Z',\n  \"\\u017A\": 'z',\n  \"\\u017C\": 'z',\n  \"\\u017E\": 'z',\n  \"\\u0132\": 'IJ',\n  \"\\u0133\": 'ij',\n  \"\\u0152\": 'Oe',\n  \"\\u0153\": 'oe',\n  \"\\u0149\": \"'n\",\n  \"\\u017F\": 'ss'\n};\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n    length = array ? array.length : 0;\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\n/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function (key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n  symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function (string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && objectToString.call(value) == symbolTag;\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function (result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\nmodule.exports = kebabCase;","import * as React from \"react\"\n\nexport default ({ arrCount, index, children }) => {\n  if (arrCount === 1) {\n    return <>{children}</>\n  }\n\n  if (index + 2 < arrCount) {\n    return <>{children}, </>\n  }\n\n  if (index + 1 === arrCount) {\n    return (\n      <>\n        {\" \"}\n        {\"&\"} {children}\n      </>\n    )\n  }\n\n  return <>{children}</>\n}\n","import React from \"react\"\nimport kebabCase from \"lodash.kebabcase\"\nimport { graphql, Link, useStaticQuery } from \"gatsby\"\nimport { Row, Cell } from \"griding\"\n\nimport * as S from \"../components/styles.css\"\nimport ConcatWords from \"../utils/ConcatWords\"\nimport formatDate from \"../utils/formatDate\"\n\nconst BlogFeatured = () => {\n  const { markdownRemark } = useStaticQuery(query)\n  const imageSource = markdownRemark.frontmatter.selectedImage.childImageSharp.fluid.src\n\n  return (\n    <Row>\n      <Cell md={6}>\n        <S.FeaturedImage>\n          <Link to={markdownRemark.fields.slug}>\n            <img src={imageSource} alt={markdownRemark.frontmatter.title} />\n          </Link>\n        </S.FeaturedImage>\n      </Cell>\n\n      <Cell md={6}>\n        <Row>\n          <S.FeaturedInfos>\n            <S.Author>\n              By{\" \"}\n              <Link\n                to={`/blog/author/${kebabCase(\n                  markdownRemark.frontmatter.author\n                )}`}\n              >\n                {markdownRemark.frontmatter.author}\n              </Link>\n            </S.Author>\n\n            <Link to={markdownRemark.fields.slug}>\n              <S.Title>{markdownRemark.frontmatter.title}</S.Title>\n            </Link>\n\n            <S.DateText>\n              {formatDate(markdownRemark.frontmatter.date)}\n            </S.DateText>\n\n            <S.Tags>\n              {markdownRemark.frontmatter.tags.map((cat, index, arr) => (\n                <ConcatWords arrCount={arr.length} index={index} key={cat}>\n                  <Link to={`/blog/tags/${kebabCase(cat)}`}>{cat}</Link>\n                </ConcatWords>\n              ))}\n            </S.Tags>\n          </S.FeaturedInfos>\n        </Row>\n      </Cell>\n    </Row>\n  )\n}\n\nexport default BlogFeatured\n\nconst query = graphql`\n  query BlogFeatured {\n    markdownRemark(frontmatter: { featured: { eq: true } }) {\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        author\n        tags\n        selectedImage {\n          childImageSharp {\n            fluid {\n              src\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { Row, Cell } from \"griding\"\n\nimport { Container } from \"../components/grid\"\nimport Layout from \"../components/layout\"\nimport Pagination from \"../components/pagination\"\nimport Featured from \"../components/featured\"\nimport renderList from \"../components/renderList\"\n\nconst BlogPostList = ({ data, pageContext }) => {\n  const { allMarkdownRemark } = data\n  const { currentPage, numPages } = pageContext\n\n  return (\n    <Layout>\n      <Cell xs={12}>{currentPage === 1 && <Featured />}</Cell>\n\n      <Container>\n        <Row>{allMarkdownRemark.edges.map(renderList)}</Row>\n\n        <Pagination currentPage={currentPage} numPages={numPages} />\n      </Container>\n    </Layout>\n  )\n}\n\nexport default BlogPostList\n\nexport const query = graphql`\n  query blogPostsList($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { featured: { eq: false } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date\n            author\n            tags\n            selectedImage {\n              childImageSharp {\n                fluid {\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}